{"version":3,"file":"0.35f82b884a632afd9e57.hot-update.js","sources":["webpack:///./src/components/Navbar.js","webpack:///./src/templates/index-page.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Link } from \"gatsby\";\nimport github from \"../img/github-icon.svg\";\nimport logo from \"../img/logo.svg\";\n\nconst logoText = `<SW>`\n\nexport default function NavBar() {\n  const [active, setActive] = useState(false)\n  const [navBarActiveClass, setNavBarActiveClass] = useState(\"\")\n  const [width, setWidth] = useState(typeof window !== 'undefined' ? window.innerWidth : 0)\n  \n  useEffect(() => {\n    const handleResize = () => {\n      setWidth(window.innerWidth)\n    }\n    \n    window.addEventListener('resize', handleResize)\n    return () => { window.removeEventListener('resize', handleResize) }\n  }, [])\n  \n  const toggleHamburger = () => {\n\n    setActive(!active)\n\n    const newClass = !active ? \"is-active\" : \"\"\n    setNavBarActiveClass(newClass)\n  };\n\n  return (\n    <nav\n      className=\"navbar is-transparent\"\n      role=\"navigation\"\n      aria-label=\"main-navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link to=\"/\" className=\"navbar-item\" title=\"Logo\">\n            <span className=\"nav-logo\">{width >= 1088 ? logoText : 'Steve Wisner'}</span>\n          </Link>\n          {/* Hamburger menu */}\n          <div\n            className={`navbar-burger burger ${navBarActiveClass}`}\n            data-target=\"navMenu\"\n            onClick={() => toggleHamburger()}\n          >\n            <span />\n            <span />\n            <span />\n          </div>\n        </div>\n        <div\n          id=\"navMenu\"\n          className={`navbar-menu ${navBarActiveClass}`}\n        >\n          <div className=\"navbar-start has-text-centered\">\n            <Link className=\"navbar-item navbar-option\" to=\"/\">\n              Home\n            </Link>\n            <Link className=\"navbar-item navbar-option\" to=\"/projects\">\n              Projects\n            </Link>\n            <Link className=\"navbar-item navbar-option\" to=\"/contact\">\n              Contact\n            </Link>\n          </div>\n          <div className=\"navbar-end has-text-centered\">\n            <a\n              className=\"navbar-item\"\n              href=\"https://github.com/spwisner\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <span className=\"icon\">\n                <img src={github} alt=\"Github\" />\n              </span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// export default Navbar;\n","import React, {useRef, useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Features from '../components/Features'\nimport BlogRoll from '../components/BlogRoll'\nimport Contact from '../components/Contact'\n\nexport function IndexPageTemplate ({\n  title,\n  subheading,\n  image,\n  about,\n  contact,\n  skills,\n}){\n\n  const [height, setHeight] = useState(typeof window !== 'undefined' ? window.innerHeight : 0)\n  \n  useEffect(() => {\n    const handleResize = () => {\n      setHeight(window.innerHeight)\n    }\n    \n    window.addEventListener('resize', handleResize)\n    return () => { window.removeEventListener('resize', handleResize) }\n  }, [])\n  \n  return (\n  <div>\n    <div\n      className={`full-width-image margin-top-0 profile-image ${height < 500 ? 'static-profile-image' : ''}`}\n      style={{\n        maxWidth: '100%',\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n      }}\n    >\n      <div\n        className=\"profile-text-container\"\n        style={{\n          display: 'flex',\n          height: '150px',\n          lineHeight: '1',\n          justifyContent: 'space-around',\n          alignItems: 'left',\n          flexDirection: 'column',\n        }}\n      >\n        <h1\n          className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen has-text-centered\"\n          style={{\n            boxShadow:\n              'rgb(19.6, 24.3, 16.1) 0.5rem 0px 0px, rgb(19.6, 24.3, 16.1) -0.5rem 0px 0px',\n            backgroundColor: 'rgb(19.6, 24.3, 16.1)',\n            color: 'white',\n            lineHeight: '1',\n            padding: '0.25em',\n          }}\n        >\n          {title}\n        </h1>\n        <h3\n          className=\"has-text-weight-bold has-text-centered is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n          style={{\n            boxShadow:\n              'rgb(19.6, 24.3, 16.1) 0.5rem 0px 0px, rgb(19.6, 24.3, 16.1) -0.5rem 0px 0px',\n            backgroundColor: 'rgb(19.6, 24.3, 16.1)',\n            color: 'white',\n            lineHeight: '1',\n            padding: '0.25em',\n          }}\n        >\n          {subheading}\n        </h3>\n      </div>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"columns\">\n            <div className=\"column is-5 is-offset-1\">\n              <div className=\"content\">\n                <div className=\"content\">\n                  <div className=\"tile\">\n                    <h1 className=\"title\">{about.title}</h1>\n                  </div>\n                  <div className=\"tile\">\n                    <p>{about.description}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"column is-5 is-offset-1\">\n              <div className=\"content\">\n                <div className=\"content\">\n                  <div className=\"tile\">\n                    <h1 className=\"title\">{contact.title}</h1>\n                  </div>\n                  <Contact />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              <div className=\"content\">\n                <div className=\"content\">\n                  <div className=\"tile\">\n                    <h1 className=\"title\">{skills.title}</h1>\n                  </div>\n                  <div className=\"tile\">\n                    <h3>{skills.subtitle}</h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              <div className=\"content\">\n                <Features gridItems={skills.blurbs} />\n                <div className=\"column is-12\">\n                  <h3 className=\"has-text-weight-semibold is-size-2\">\n                    Latest Projects\n                  </h3>\n                  <BlogRoll />\n                  <div className=\"column is-12 has-text-centered\">\n                    <Link className=\"btn\" to=\"/projects\">\n                      All Projects\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n  )\n}\n\nIndexPageTemplate.propTypes = {\n  title: PropTypes.string,\n  subheading: PropTypes.string,\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  about: PropTypes.object,\n  skills: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n}\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        title={frontmatter.title}\n        subheading={frontmatter.subheading}\n        image={frontmatter.image}\n        about={frontmatter.about}\n        contact={frontmatter.contact}\n        skills={frontmatter.skills}\n      />\n    </Layout>\n  )\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      frontmatter {\n        title\n        subheading\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        about {\n          title\n          description\n        }\n        contact {\n          title\n          location\n        }\n        skills {\n          title\n          subtitle\n          blurbs {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 240, quality: 64) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            text\n          }\n        }\n      }\n    }\n  }\n`\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;;;;;;;;;;AA9EA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAEA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AACA;AASA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AAAA;AAEA;;;;;;;;;;AA7KA;AAkJA;AA2BA;;;;;;;;;;;;;;A","sourceRoot":""}